---
- name: Instalar y configurar Perl en $HOME/localperl
  hosts: all
  become: no  # Se ejecuta como usuario normal

  tasks:
    - name: Descargar Perl 5.30.0
      get_url:
        url: "https://cpan.metacpan.org/authors/id/X/XS/XSAWYERX/perl-5.30.0.tar.gz"
        dest: "{{ ansible_env.HOME }}/perl-5.30.0.tar.gz"

    - name: Extraer Perl
      unarchive:
        src: "{{ ansible_env.HOME }}/perl-5.30.0.tar.gz"
        dest: "{{ ansible_env.HOME }}/"
        remote_src: yes

    - name: Verificar si la carpeta de Perl existe
      stat:
        path: "{{ ansible_env.HOME }}/perl-5.30.0"
      register: perl_dir

    - name: Ejecutar Configure si la carpeta existe
      command:
        cmd: "./Configure -des -Dprefix={{ ansible_env.HOME }}/localperl"
        chdir: "{{ ansible_env.HOME }}/perl-5.30.0"
      when: perl_dir.stat.exists
      register: configure_output
      ignore_errors: yes

    - name: Mostrar salida de ./Configure si existe
      debug:
        msg: "Salida de ./Configure: {{ configure_output.stdout | default('No output') }}"

    - name: Compilar Perl
      command:
        cmd: "make -j$(nproc)"
        chdir: "{{ ansible_env.HOME }}/perl-5.30.0"
      when: configure_output.rc is defined and configure_output.rc == 0

    - name: Instalar Perl en {{ ansible_env.HOME }}/localperl
      command:
        cmd: "make install"
        chdir: "{{ ansible_env.HOME }}/perl-5.30.0"
      when: configure_output.rc is defined and configure_output.rc == 0

    - name: Agregar Perl al PATH en .bashrc
      lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: "export PATH={{ ansible_env.HOME }}/localperl/bin:$PATH"
        create: yes

    - name: Cargar los cambios en la sesión actual
      shell: "source {{ ansible_env.HOME }}/.bashrc"
      args:
        executable: /bin/bash

    - name: Verificar la instalación de Perl
      command: "perl -v"
      register: perl_version
      when: configure_output.rc is defined and configure_output.rc == 0

    - name: Mostrar versión de Perl si está instalado
      debug:
        msg: "Perl instalado correctamente: {{ perl_version.stdout | default('No output') }}"

    - name: Verificar la ruta de Perl
      command: "which perl"
      register: perl_path
      when: configure_output.rc is defined and configure_output.rc == 0

    - name: Mostrar ruta de Perl si existe
      debug:
        msg: "Ruta de Perl: {{ perl_path.stdout | default('No output') }}"

    - name: Descargar instalador de GLPI Agent
      get_url:
        url: "https://github.com/glpi-project/glpi-agent/releases/download/1.12/glpi-agent-1.12-linux-installer.pl"
        dest: "{{ ansible_env.HOME }}/glpi-agent-1.12-linux-installer.pl"
        mode: '0755'

    - name: Otorgar permisos de ejecución al instalador de GLPI Agent
      command: "chmod +x {{ ansible_env.HOME }}/glpi-agent-1.12-linux-installer.pl"

    - name: Ejecutar el instalador de GLPI Agent con configuración de servidor GLPI
      command:
        cmd: "{{ ansible_env.HOME }}/localperl/bin/perl {{ ansible_env.HOME }}/glpi-agent-1.12-linux-installer.pl --server=http://172.16.120.105/"
      register: glpi_install
      when: configure_output.rc is defined and configure_output.rc == 0

    - name: Mostrar resultado de la instalación de GLPI Agent si existe
      debug:
        msg: "Resultado de la instalación de GLPI Agent: {{ glpi_install.stdout | default('No output') }}"
